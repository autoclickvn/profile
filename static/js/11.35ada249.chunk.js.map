{"version":3,"sources":["../node_modules/clsx/dist/clsx.m.js","component/music.tsx"],"names":["toVal","mix","k","y","str","Array","isArray","length","tmp","x","i","arguments","anmMusicStart","keyframes","anmMusicEnd","MusicStyle","styled","div","Music","useState","showAnmMusicEnd","setShowAnmMusicEnd","url","Audio","audio","playing","setPlaying","useEffect","play","pause","addEventListener","removeEventListener","onToggle","useAudio","process","setTimeout","clearTimeout","className","onClick","title","src","clsx","alt"],"mappings":"oGAAA,SAASA,EAAMC,GACd,IAAIC,EAAGC,EAAGC,EAAI,GAEd,GAAmB,kBAARH,GAAmC,kBAARA,EACrCG,GAAOH,OACD,GAAmB,kBAARA,EACjB,GAAII,MAAMC,QAAQL,GACjB,IAAKC,EAAE,EAAGA,EAAID,EAAIM,OAAQL,IACrBD,EAAIC,KACHC,EAAIH,EAAMC,EAAIC,OACjBE,IAAQA,GAAO,KACfA,GAAOD,QAKV,IAAKD,KAAKD,EACLA,EAAIC,KACPE,IAAQA,GAAO,KACfA,GAAOF,GAMX,OAAOE,EAGO,eAEd,IADA,IAASI,EAAKC,EAAVC,EAAE,EAAWN,EAAI,GACdM,EAAIC,UAAUJ,SAChBC,EAAMG,UAAUD,QACfD,EAAIT,EAAMQ,MACbJ,IAAQA,GAAO,KACfA,GAAOK,GAIV,OAAOL,I,8FClCFQ,EAAgBC,YAAH,0JAKbC,EAAcD,YAAH,yVAYXE,EAAaC,IAAOC,IAAV,qMAECL,EAKAE,GAmDFI,UA3BS,WACtB,MAA8CC,oBAAkB,GAAhE,mBAAOC,EAAP,KAAwBC,EAAxB,KACA,EAtBe,SAACC,GAChB,MAAgBH,mBAAS,IAAII,MAAMD,IAA5BE,EAAP,oBACA,EAA8BL,oBAAS,GAAvC,mBAAOM,EAAP,KAAgBC,EAAhB,KAeA,OAXAC,qBAAU,WACRF,EAAUD,EAAMI,OAASJ,EAAMK,UAC9B,CAACJ,EAASD,IAEbG,qBAAU,WAER,OADAH,EAAMM,iBAAiB,SAAS,kBAAMJ,GAAW,MAC1C,WACLF,EAAMO,oBAAoB,SAAS,kBAAML,GAAW,SAErD,CAACF,IAEG,CAAEC,UAASO,SAbD,kBAAMN,GAAYD,KAkBLQ,CAAS,GAAD,OAAIC,GAAJ,sCAA9BT,EAAR,EAAQA,QAASO,EAAjB,EAAiBA,SAQjB,OANAL,qBAAU,WACR,IAAMlB,EAAI0B,YAAW,kBAAMd,GAAmB,KAAO,KAErD,OAAO,kBAAMe,aAAa3B,MACzB,IAGD,cAACM,EAAD,CAAYsB,UAAU,gDAAtB,SACE,wBAAQC,QAASN,EAAUK,UAAU,eAAeE,MAAM,QAA1D,SACE,qBACEC,IAAG,UAAKN,GAAL,8BAAiDT,EAAU,OAAS,QAApE,QACHY,UAAWI,YAAK,CACd,0BAA0B,EAC1B,uBAAwBrB,EACxB,UAAWA,IAEbsB,IAAI","file":"static/js/11.35ada249.chunk.js","sourcesContent":["function toVal(mix) {\n\tvar k, y, str='';\n\n\tif (typeof mix === 'string' || typeof mix === 'number') {\n\t\tstr += mix;\n\t} else if (typeof mix === 'object') {\n\t\tif (Array.isArray(mix)) {\n\t\t\tfor (k=0; k < mix.length; k++) {\n\t\t\t\tif (mix[k]) {\n\t\t\t\t\tif (y = toVal(mix[k])) {\n\t\t\t\t\t\tstr && (str += ' ');\n\t\t\t\t\t\tstr += y;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor (k in mix) {\n\t\t\t\tif (mix[k]) {\n\t\t\t\t\tstr && (str += ' ');\n\t\t\t\t\tstr += k;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn str;\n}\n\nexport default function () {\n\tvar i=0, tmp, x, str='';\n\twhile (i < arguments.length) {\n\t\tif (tmp = arguments[i++]) {\n\t\t\tif (x = toVal(tmp)) {\n\t\t\t\tstr && (str += ' ');\n\t\t\t\tstr += x\n\t\t\t}\n\t\t}\n\t}\n\treturn str;\n}\n","import clsx from 'clsx';\nimport { useEffect, useState } from 'react';\nimport styled, { keyframes } from 'styled-components';\n\nconst anmMusicStart = keyframes`\n  from{transform: rotate(-45deg) translateX(-50px); opacity: 0.7;}\n  to{transform: rotate(0deg) translateX(0); opacity: 1;}\n`;\n\nconst anmMusicEnd = keyframes`\n  0% {transform: scale3d(1, 1, 1);}\n\n  10%, 20% {transform: scale3d(.9, .9, .9) rotate3d(0, 0, 1, -3deg);}\n\n  30%, 50%, 70%, 90% {transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, 3deg);}\n\n  40%, 60%, 80% {transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, -3deg);}\n\n  100% {transform: scale3d(1, 1, 1);}\n`;\n\nconst MusicStyle = styled.div`\n  .anm-start {\n    animation: ${anmMusicStart} 1.5s ease-in-out forwards;\n    animation-delay: 5s;\n  }\n\n  .anm-end {\n    animation: ${anmMusicEnd} 5s ease-in-out infinite alternate;\n  }\n`;\n\nconst useAudio = (url: string) => {\n  const [audio] = useState(new Audio(url));\n  const [playing, setPlaying] = useState(false);\n\n  const onToggle = () => setPlaying(!playing);\n\n  useEffect(() => {\n    playing ? audio.play() : audio.pause();\n  }, [playing, audio]);\n\n  useEffect(() => {\n    audio.addEventListener('ended', () => setPlaying(false));\n    return () => {\n      audio.removeEventListener('ended', () => setPlaying(false));\n    };\n  }, [audio]);\n\n  return { playing, onToggle };\n};\n\nconst Music: React.FC = () => {\n  const [showAnmMusicEnd, setShowAnmMusicEnd] = useState<boolean>(false);\n  const { playing, onToggle } = useAudio(`${process.env.PUBLIC_URL}/assets/audio/Lam-Gi-Phai-Hot.mp3`);\n\n  useEffect(() => {\n    const x = setTimeout(() => setShowAnmMusicEnd(true), 7000);\n\n    return () => clearTimeout(x);\n  }, []);\n\n  return (\n    <MusicStyle className=\"fixed bottom-7 left-7 lg:bottom-10 lg:left-10\">\n      <button onClick={onToggle} className=\"outline-none\" title=\"Music\">\n        <img\n          src={`${process.env.PUBLIC_URL}/assets/home/music-${playing ? 'play' : 'pause'}.png`}\n          className={clsx({\n            'w-8 lg:w-12 music-icon': true,\n            'anm-start opacity-0': !showAnmMusicEnd,\n            'anm-end': showAnmMusicEnd,\n          })}\n          alt=\"music\"\n        />\n      </button>\n    </MusicStyle>\n  );\n};\n\nexport default Music;\n"],"sourceRoot":""}