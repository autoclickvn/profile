{"version":3,"sources":["../node_modules/clsx/dist/clsx.m.js","page/exp/experience.data.ts","page/exp/experience.style.ts","page/exp/experience.tsx","page/exp/index.ts"],"names":["toVal","mix","k","y","str","Array","isArray","length","tmp","x","i","arguments","ARRAY_EXP","time","workplace","position","icon","ExpStyle","styled","div","process","Experience","isShow","className","clsx","src","alt","map","item","index"],"mappings":"mGAAA,SAASA,EAAMC,GACd,IAAIC,EAAGC,EAAGC,EAAI,GAEd,GAAmB,kBAARH,GAAmC,kBAARA,EACrCG,GAAOH,OACD,GAAmB,kBAARA,EACjB,GAAII,MAAMC,QAAQL,GACjB,IAAKC,EAAE,EAAGA,EAAID,EAAIM,OAAQL,IACrBD,EAAIC,KACHC,EAAIH,EAAMC,EAAIC,OACjBE,IAAQA,GAAO,KACfA,GAAOD,QAKV,IAAKD,KAAKD,EACLA,EAAIC,KACPE,IAAQA,GAAO,KACfA,GAAOF,GAMX,OAAOE,EAGO,eAEd,IADA,IAASI,EAAKC,EAAVC,EAAE,EAAWN,EAAI,GACdM,EAAIC,UAAUJ,SAChBC,EAAMG,UAAUD,QACfD,EAAIT,EAAMQ,MACbJ,IAAQA,GAAO,KACfA,GAAOK,GAIV,OAAOL,I,qDCtCKQ,EAAY,CACvB,CACEC,KAAM,QACNC,UAAW,yBACXC,SAAU,UACVC,KAAM,4CAER,CACEH,KAAM,OACNC,UAAW,8BACXC,SAAU,UACVC,KAAM,4CAER,CACEH,KAAM,OACNC,UAAW,yBACXC,SAAU,UACVC,KAAM,4CAER,CACEH,KAAM,OACNC,UAAW,6CACXC,SAAU,UACVC,KAAM,4CAER,CACEH,KAAM,OACNC,UAAW,2BACXC,SAAU,qBACVC,KAAM,6C,QC3BGC,E,MAAWC,EAAOC,IAAV,mGACKC,I,OC2DXC,EA1DmC,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACnD,OACE,cAACL,EAAD,CACEM,UAAWC,YAAK,CACd,gIACE,EACF,+BAAgCF,EAChC,OAAQA,IALZ,SAQGA,GACC,sBAAKC,UAAU,wCAAf,UACE,qBAAKA,UAAU,oEACf,sBAAKA,UAAU,2CAAf,UACE,qBAAKA,UAAU,2BAAf,SACE,qBACEE,IAAG,UAAKL,GAAL,6CACHG,UAAU,kBACVG,IAAI,mBAGR,sBAAKH,UAAU,uBAAf,UACE,qBACEE,IAAG,UAAKL,GAAL,oCACHG,UAAU,qCACVG,IAAI,UAGLd,EAAUe,KAAI,SAACC,EAAMC,GACpB,IAAQf,EAAoCc,EAApCd,UAAWD,EAAyBe,EAAzBf,KAAME,EAAmBa,EAAnBb,SAAUC,EAASY,EAATZ,KACnC,OACE,sBAAyBO,UAAU,mBAAnC,UACE,sBACEA,UAAWC,YAAK,CACd,4BAA4B,EAC5B,OAAQZ,EAAUL,SAAWsB,EAAQ,IAHzC,UAME,sBAAMN,UAAU,4CAAhB,SAA6DV,IAC7D,qBAAKU,UAAU,2BAAf,SACE,qBAAKE,IAAG,UAAKL,IAAL,OAA8BJ,GAAQU,IAAI,KAAKH,UAAU,cAGrE,sBAAKA,UAAU,iCAAf,UACE,sBAAMA,UAAU,wCAAhB,SAAyDT,IACzD,sBAAMS,UAAU,sBAAhB,SAAuCR,SAd3C,cAAiBF,mBCjCpBQ","file":"static/js/5.2735f1a3.chunk.js","sourcesContent":["function toVal(mix) {\n\tvar k, y, str='';\n\n\tif (typeof mix === 'string' || typeof mix === 'number') {\n\t\tstr += mix;\n\t} else if (typeof mix === 'object') {\n\t\tif (Array.isArray(mix)) {\n\t\t\tfor (k=0; k < mix.length; k++) {\n\t\t\t\tif (mix[k]) {\n\t\t\t\t\tif (y = toVal(mix[k])) {\n\t\t\t\t\t\tstr && (str += ' ');\n\t\t\t\t\t\tstr += y;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor (k in mix) {\n\t\t\t\tif (mix[k]) {\n\t\t\t\t\tstr && (str += ' ');\n\t\t\t\t\tstr += k;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn str;\n}\n\nexport default function () {\n\tvar i=0, tmp, x, str='';\n\twhile (i < arguments.length) {\n\t\tif (tmp = arguments[i++]) {\n\t\t\tif (x = toVal(tmp)) {\n\t\t\t\tstr && (str += ' ');\n\t\t\t\tstr += x\n\t\t\t}\n\t\t}\n\t}\n\treturn str;\n}\n","export const ARRAY_EXP = [\n  {\n    time: '2004 ',\n    workplace: 'Bao Yen primary school',\n    position: 'Student',\n    icon: '/assets/experience/img-ic-timeline-1.png',\n  },\n  {\n    time: '2009',\n    workplace: 'Thanh Thuy secondary school',\n    position: 'Student',\n    icon: '/assets/experience/img-ic-timeline-2.png',\n  },\n  {\n    time: '2013',\n    workplace: 'Thanh Thuy high school',\n    position: 'Student',\n    icon: '/assets/experience/img-ic-timeline-3.png',\n  },\n  {\n    time: '2017',\n    workplace: 'University of Transport and Communications',\n    position: 'Student',\n    icon: '/assets/experience/img-ic-timeline-4.png',\n  },\n  {\n    time: '2020',\n    workplace: 'Omnischool (EkidEnglish)',\n    position: 'Frontend Developer',\n    icon: '/assets/experience/img-ic-timeline-5.png',\n  },\n];\n","import styled from 'styled-components';\n\nexport const ExpStyle = styled.div`\n  background-image: url(${process.env.PUBLIC_URL}/assets/experience/img-bg-experience.webp);\n`;\n","import clsx from 'clsx';\nimport { ARRAY_EXP } from './experience.data';\nimport { ExpStyle } from './experience.style';\n\nconst Experience: React.FC<{ isShow: boolean }> = ({ isShow }) => {\n  return (\n    <ExpStyle\n      className={clsx({\n        'fixed z-20 overflow-y-auto h-screen lg:overflow-hidden transform bg-no-repeat bg-cover top-0 right-0 opacity-90 duration-500':\n          true,\n        'w-2/3 lg:w-1/3 translate-x-0': isShow,\n        'w-0': !isShow,\n      })}\n    >\n      {isShow && (\n        <div className=\"relative h-full bg-no-repeat bg-cover\">\n          <div className=\"absolute w-full h-full bg-gray-700 opacity-10 top-0 left-0 z-10\"></div>\n          <div className=\"z-50 absolute top-0 left-0 w-full h-full\">\n            <div className=\"flex justify-center mt-5\">\n              <img\n                src={`${process.env.PUBLIC_URL}/assets/experience/img-top-experience.png`}\n                className=\"w-40 mr-36 z-40\"\n                alt=\"top perience\"\n              />\n            </div>\n            <div className=\"px-20 mt-10 relative\">\n              <img\n                src={`${process.env.PUBLIC_URL}/assets/experience/img-straw.png`}\n                className=\"absolute -top-56 left-48 w-52 z-10\"\n                alt=\"straw\"\n              />\n\n              {ARRAY_EXP.map((item, index) => {\n                const { workplace, time, position, icon } = item;\n                return (\n                  <div key={`exp_${time}`} className=\"grid grid-cols-3\">\n                    <div\n                      className={clsx({\n                        'col-span-1 relative z-40': true,\n                        'h-28': ARRAY_EXP.length !== index + 1,\n                      })}\n                    >\n                      <span className=\"block font-semibold text-gray-600 text-xl\">{time}</span>\n                      <div className=\"absolute -top-2 -right-5\">\n                        <img src={`${process.env.PUBLIC_URL}${icon}`} alt=\"ic\" className=\"w-14\" />\n                      </div>\n                    </div>\n                    <div className=\"col-span-4 lg:col-span-2 ml-10\">\n                      <span className=\"font-bold text-xl block text-gray-600\">{workplace}</span>\n                      <span className=\"block text-gray-600\">{position}</span>\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      )}\n    </ExpStyle>\n  );\n};\n\nexport default Experience;\n","import Experience from './experience';\n\nexport default Experience;\n"],"sourceRoot":""}